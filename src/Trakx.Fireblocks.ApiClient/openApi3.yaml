openapi: 3.0.0
info:
  title: Fireblocks API
  version: "1.6.1"
  contact:
    email: support@fireblocks.com
servers:
  - url: 'https://api.fireblocks.io/v1'
x-readme:
  explorer-enabled: false
  samples-languages:
  - curl
  - javascript
  - python

paths:
  #  VAULT
  '/vault/accounts':
    get:
      summary: List vault accounts
      description: Gets all vault accounts in your workspace.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_accounts = fireblocks.get_vault_accounts()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccounts = await fireblocks.getVaultAccounts();
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: namePrefix
          required: false
          schema:
            type: string
        - in: query
          name: nameSuffix
          required: false
          schema:
            type: string
        - in: query
          name: minAmountThreshold
          required: false
          schema:
            type: number
        - in: query
          name: assetId
          required: false
          schema:
            type: string
            x-fb-entity: asset
        - in: query
          name: maxBip44AddressIndexUsed
          required: false
          schema:
            type: number
        - in: query
          name: maxBip44ChangeAddressIndexUsed
          required: false
          schema:
            type: number
      responses:
        '200':
          description: A list of vault accounts
          headers: &req-id-header
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            '*/*':
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/VaultAccount'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new vault account
      description: Creates a new vault account with the requested name.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAccount = fireblocks.create_vault_account(name, hiddenOnUI, customer_ref_id, auto_fueling)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccount = await fireblocks.createVaultAccount(name, hiddenOnUI, customerRefId, autoFueling);
          name: Fireblocks SDK Javascript example
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Account Name
                  type: string
                hiddenOnUI:
                  description: >-
                    Optional - if true, the created account and all related transactions will not be shown on Fireblocks console
                  type: boolean
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
                autoFuel:
                  description:
                    Optional - Sets the autoFuel property of the vault account
                  type: boolean
      responses:
        '200':
          description: A Vault Account object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAccount'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts_paged':
    get:
      summary: List vault acounts (Paginated)
      description: Gets all vault accounts in your workspace. This endpoint returns a limited amount of results with a quick response time.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_accounts = fireblocks.get_vault_accounts_with_page_info(filters)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccounts = await fireblocks.getVaultAccountsWithPageInfo(filters);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: namePrefix
          required: false
          schema:
            type: string
        - in: query
          name: nameSuffix
          required: false
          schema:
            type: string
        - in: query
          name: minAmountThreshold
          required: false
          schema:
            type: number
        - in: query
          name: assetId
          required: false
          schema:
            type: string
            x-fb-entity: asset
        - in: query
          name: maxBip44AddressIndexUsed
          required: false
          schema:
            type: number
        - in: query
          name: maxBip44ChangeAddressIndexUsed
          required: false
          schema:
            type: number
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
            enum: ["ASC", "DESC"]
            default: "DESC"
        - in: query
          name: before
          required: false
          schema:
            type: string
        - in: query
          name: after
          required: false
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 500
            default: 200
      responses:
        '200':
          description: A VaultAccountsPagedResponse object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                  $ref: '#/components/schemas/VaultAccountsPagedResponse'
  '/vault/accounts/{vaultAccountId}':
    get:
      summary: Find a vault account by ID
      description: Returns the requested vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_account = fireblocks.get_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccount = await fireblocks.getVaultAccount(vault_account_id);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
            type: string
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
      responses:
        '200':
          description: A Vault Account object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAccount'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Rename a vault account
      description: Renames the requested vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAccount = fireblocks.update_vault_account(vault_account_id, name)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccount = await fireblocks.updateVaultAccount(vautlAccountId, name);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to edit
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Account Name
                  type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/hide':
    post:
      summary: Hide a vault account in the console
      description: Hides the requested vault account from the web console view.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.hide_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.hideVaultAccount(vaultAccountId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: The vault account to hide
          schema:
            type: string
            minimum: 1
            format: numeric
            x-fb-entity: vault_account
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/unhide':
    post:
      summary: Unhide a vault account in the console
      description: Makes a hidden vault account visible in web console view.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.unhide_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.unhideVaultAccount(vaultAccountId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: The vault account to unhide
          schema:
            type: string
            minimum: 1
            format: numeric
            x-fb-entity: vault_account
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/activate':
    post:
      summary: Activate a wallet in a vault account
      description: Initiates activation for a wallet in a vault account.
      tags:
        - Vaults
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return, or 'default' for the default vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: OK
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/set_customer_ref_id':
    post:
      summary: Set an AML/KYT customer reference ID for a vault account
      description: Assigns an AML/KYT customer reference ID for the vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.set_vault_account_customer_ref_id(vault_account_id, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.setCustomerRefIdForVaultAccount(vaultAccountId, customerRefId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: The vault account ID
          schema:
            type: string
            minimum: 1
            format: numeric
            x-fb-entity: vault_account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                customerRefId:
                  description: Customer reference ID
                  type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/set_auto_fuel':
    post:
      summary: Turn autofueling on or off
      description: Sets the autofueling property of the vault account to enabled or disabled.
      tags:
        - Vaults
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: The vault account ID
          schema:
            type: string
            minimum: 1
            format: numeric
            x-fb-entity: vault_account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                autoFuel:
                  description: Auto Fuel
                  type: boolean
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}':
    get:
      summary: Get the asset balance for a vault account
      description: Returns a wallet for a specific asset of a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.get_vault_account_asset(vault_account_id, asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.getVaultAccountAsset(vaultAccountId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: A VaultAsset object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new wallet
      description: Creates a wallet for a specific asset in a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.create_vault_asset(vault_account_id, asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.createVaultAsset(vaultAccountId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return, or 'default' for the default vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                eosAccountName:
                  description: Optional - when creating an EOS wallet, the account name. If not provided, a random name will be generated
                  type: string
      responses:
        '200':
          description: OK
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/balance':
    post:
      summary: Refresh asset balance data
      description: Updates the balance of a specific asset in a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.refresh_vault_asset_balance(vault_account_id, asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.refreshVaultAssetBalance(vaultAccountId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      requestBody:
        required: false
        content:
          '*/*':
            schema:
              type: object
      responses:
        '200':
          description: A VaultAsset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/addresses':
    get:
      summary: Get asset addresses
      description: Lists all addresses for specific asset of vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: depositAddresses = fireblocks.get_deposit_addresses(vault_account_id, asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const depositAddresses = await fireblocks.getDepositAddresses(vaultAccountId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: A list of deposit addresses
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaultWalletAddress'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create new asset deposit address
      description: Creates a new deposit address for an asset of a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: address = fireblocks.generate_new_address(vault_account_id, asset_id, description, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const address = await fireblocks.generateNewAddress(vaultAccountId, assetId, description, customerRefId);
          name: Fireblocks SDK Javascript example
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                description:
                  description: (Optional) Attach a description to the new address
                  type: string
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: The created address
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateAddressResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/max_spendable_amount':
    get:
        summary: Get the maximum spendable amount in a single transaction.
        description: Get the maximum amount of a particular asset that can be spent in a single transaction from a specified vault account (UTXO assets only, with a limitation on number of inputs embedded). Send several transactions if you want to spend more than the maximum spendable amount.
        tags:
          - Vaults
        x-readme:
          code-samples:
          - language: python
            code: address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);
            name: Fireblocks SDK Javascript example
        parameters:
          - in: path
            name: vaultAccountId
            required: true
            description: >-
              The ID of the vault account, or 'default' for the default vault account
            schema:
              type: string
              format: numeric
              x-fb-entity: vault_account
          - in: path
            name: assetId
            required: true
            description: The ID of the asset
            schema:
              type: string
              x-fb-entity: asset
          - in: query
            name: manualSignging
            required: false
            description: False by default. The maximum number of inputs depends if the transaction will be signed by an automated co-signer server or on a mobile device.
            schema:
              type: boolean
        responses:
          '200':
            description: OK
            headers:
              X-Request-ID:
                $ref: '#/components/headers/X-Request-ID'
          default:
            $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}':
    put:
      summary: Update address description
      description: Updates the description of an existing address of an asset in a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: address = fireblocks.set_address_description(vault_account_id, asset_id, address, tag, description)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const address = await fireblocks.setAddressDescription(vaultAccountId, assetId, address, tag, description);
          name: Fireblocks SDK Javascript example
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The address description
                  type: string
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
        - in: path
          name: addressId
          required: true
          description: >-
            The address for which to add a description. For XRP, use <address>:<tag>, for all other assets, use only the address
          schema:
            type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/set_customer_ref_id':
    post:
      summary: Assign AML customer reference ID
      description: Sets an AML/KYT customer reference ID for a specific address.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.set_customer_ref_id_for_address(vault_account_id, asset_id, address_id, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.setCustomerRefIdForAddress(vaultAccountId, assetId, addressId, customerRefId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
        - in: path
          name: addressId
          required: true
          description: >-
            The address for which to add a description. For XRP, use <address>:<tag>, for all other assets, use only the address
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                customerRefId:
                  description: Customer reference ID
                  type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/create_legacy':
    post:
      summary: Convert a segwit address to legacy format
      description: Converts an existing segwit address to the legacy format.
      tags:
        - Vaults
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
        - in: path
          name: addressId
          required: true
          description: >-
            The segwit address to translate
          schema:
            type: string
      responses:
        '200':
          description: The created address
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateAddressResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/unspent_inputs':
    get:
      summary: Get UTXO unspent inputs information
      description: Returns unspent inputs information of an asset in a vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.get_unspent_inputs(vault_account_id, asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.getUnspentInputs(vaultAccountId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: List of Unspent information per input
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnspentInputsResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/public_key_info/':
    get:
      summary: Get the public key information
      description: Gets the public key information based on derivation path and signing algorithm.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: pubKey = fireblocks.get_public_key_info(algorithm, derivation_path, compressed)
          name: Fireblocks SDK Python example
        - language: javascript
          code: >
            const PublicKeyInfoArgs = {
            algorithm: 'MPC_ECDSA_SECP256K1',
            derivationPath: '[44,0,0,0,0]'
            }
            const pubKey = await fireblocks.getPublicKeyInfo(PublicKeyInfoArgs);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: derivationPath
          required: true
          schema:
            type: string
        - in: query
          name: algorithm
          required: true
          schema:
            type: string
        - in: query
          name: compressed
          schema:
            type: boolean
      responses:
        '200':
          description: Public key information
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PublicKeyInformation'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/{change}/{addressIndex}/public_key_info':
    get:
      summary: Get the public key for a vault account
      description: Gets the public key information for the vault account.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: pubKey = fireblocks.get_public_key_info_for_vault_account(vault_account_id, asset_id, change, address_index, compressed)
          name: Fireblocks SDK Python example
        - language: javascript
          code: >
            const PublicKeyInfoArgs = {
            algorithm: 'MPC_ECDSA_SECP256K1',
            derivationPath: '[44,0,0,0,0]'
            }
            const pubKey = await fireblocks.getPublicKeyInfo(PublicKeyInfoArgs);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          schema:
            type: string
            format: numeric
            x-fb-entity: vault_account
        - in: path
          name: assetId
          required: true
          schema:
            type: string
            x-fb-entity: asset
        - in: path
          name: change
          required: true
          schema:
            type: number
        - in: path
          name: addressIndex
          required: true
          schema:
            type: number
        - in: query
          name: compressed
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Public Key Information
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PublicKeyInformation'
        default:
          $ref: '#/components/responses/Error'
  '/vault/assets':
    get:
      summary: Get asset balance for chosen assets
      description: Gets the assets amount summary for all accounts or filtered accounts.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: assets_balance = fireblocks.get_vault_assets_balance(accout_name_prefix, account_name_suffix)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const assetsBalance = await fireblocks.getVaultAssetsBalance(accountNamePrefix, accountNameSuffix);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: accountNamePrefix
          required: false
          schema:
            type: string
        - in: query
          name: accountNameSuffix
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Amount by asset
          headers: *req-id-header
          content:
            '*/*':
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
  '/vault/assets/{assetId}':
    get:
      summary: Get vault balance by asset
      description: Gets the vault balance summary for an asset.
      tags:
        - Vaults
      x-readme:
        code-samples:
        - language: python
          code: assets_balance = fireblocks.get_vault_balance_by_asset(asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const assetsBalance = await fireblocks.getVaultBalanceByAsset(assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: Vault amount by asset
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'

  # EXCHANGE ACCOUNTS
  /exchange_accounts:
    get:
      summary: List exchange accounts
      description: Returns all exchange accounts.
      tags:
        - Exchange accounts
      x-readme:
        code-samples:
          - language: python
            code: exchangeAccounts = fireblocks.get_exchange_accounts()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const exchangeAccounts = await fireblocks.getExchangeAccounts();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: An ExchangeAccount object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeAccount'
        default:
          $ref: '#/components/responses/Error'
  '/exchange_accounts/{exchangeAccountId}':
    get:
      summary: Find a specific exchange account
      description: Returns an exchange account by ID.
      tags:
        - Exchange accounts
      x-readme:
        code-samples:
          - language: python
            code: exchangeAccount = fireblocks.get_exchange_account(exchangeAccountId)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const exchnageAccount = await fireblocks.get_exchange_account(exchangeAccountId);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: exchangeAccountId
          required: true
          description: The ID of the exchange account to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An ExchangeAccount object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeAccount'
        default:
          $ref: '#/components/responses/Error'
  '/exchange_accounts/{exchangeAccountId}/internal_transfer':
    post:
      summary: Internal tranfer for exchange accounts
      description: Transfers funds between trading accounts under the same exchange account.
      tags:
        - Exchange accounts
      parameters:
        - in: path
          name: exchangeAccountId
          required: true
          description: The ID of the exchange account to return
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: Transfer succeeded
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                asset:
                  type: string
                amount:
                  type: string
                sourceType:
                  $ref: '#/components/schemas/TradingAccountType'
                destType:
                  $ref: '#/components/schemas/TradingAccountType'
  '/exchange_accounts/{exchangeAccountId}/convert':
    post:
      summary: Convert exchange account funds from the source asset to the destination asset. Coinbase (USD to USDC, USDC to USD) and Bitso (MXN to USD) are supported conversions.
      tags:
        - Exchange accounts
      parameters:
        - in: path
          name: exchangeAccountId
          required: true
          description: The ID of the exchange account. Please make sure the exchange supports conversions. To find the ID of your exchange account, use GET/exchange_accounts.
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Conversion successful
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                srcAsset:
                  type: string
                  description: Name of the source asset (must be in a currency that is supported for conversions in the selected exchange type that corresponds to your exchange ID)
                destAsset:
                  type: string
                  description: Name of the destination asset (must be in a currency that is supported for conversions in the selected exchange type that corresponds to your exchange ID)
                amount:
                  type: number
                  description: The amount to transfer (in the currency of the source asset)
              required:
                - srcAsset
                - destAsset
                - amount
  '/exchange_accounts/{exchangeAccountId}/{assetId}':
    get:
      summary: Find an asset for an exchange account
      description: Returns an asset for an exchange account.
      tags:
        - Exchange accounts
      x-readme:
        code-samples:
          - language: python
            code: exchangeAsset = fireblocks.get_exchange_account_asset(exchangeAccountId, assetId)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const exchangeAsset = await fireblocks.getExchangeAsset(exchangeAccountId, assetId);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: exchangeAccountId
          required: true
          description: The ID of the exchange account to return
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An ExchangeAccountAsset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeAsset'
        default:
          $ref: '#/components/responses/Error'

  # FIAT ACCOUNTS
  /fiat_accounts:
    get:
      summary: List fiat accounts
      description: Returns all fiat accounts.
      tags:
        - Fiat accounts
      x-readme:
        code-samples:
          - language: python
            code: transactions = fireblocks.get_fiat_accounts()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const transactions = await fireblocks.getFiatAccounts();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A fiat account object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FiatAccount'
        default:
          $ref: '#/components/responses/Error'
  '/fiat_accounts/{accountId}':
    get:
      summary: Find a specific fiat account
      description: Returns a fiat account by ID.
      tags:
        - Fiat accounts
      x-readme:
        code-samples:
          - language: python
            code: transactions = fireblocks.get_fiat_account_by_id(account_id)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const transactions = await fireblocks.getFiatAccountById(accountId);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: accountId
          required: true
          description: The ID of the fiat account to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A fiat account object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FiatAccount'
        default:
          $ref: '#/components/responses/Error'
  '/fiat_accounts/{accountId}/redeem_to_linked_dda':
    post:
      summary: Redeem funds to DDA
      description: Redeems funds to the linked DDA.
      tags:
        - Fiat accounts
      x-readme:
        code-samples:
          - language: python
            code: transactions = fireblocks.redeem_to_linked_dda(account_id, amount)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const transactions = await fireblocks.redeemToLinkedDDA(accountId, amount);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: accountId
          required: true
          description: The ID of the fiat account to use
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: Transfer succeeded
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  type: number
  '/fiat_accounts/{accountId}/deposit_from_linked_dda':
    post:
      summary: Deposit funds from DDA
      description: Deposits funds from the linked DDA.
      tags:
        - Fiat accounts
      x-readme:
        code-samples:
          - language: python
            code: transactions = fireblocks.deposit_from_linked_dda(account_id, amount)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const transactions = await fireblocks.depositFromLinkedDDA(accountId, amount);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: accountId
          required: true
          description: The ID of the fiat account to use
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: Transfer succeeded
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  type: number

  # NETWORK CONNECTIONS
  '/network_connections':
    get:
      summary: List network connections
      description: |
        Returns all network connections.

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      x-readme:
        code-samples:
          - language: python
            code: network_connections = fireblocks.get_network_connections()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const networkConnections = await fireblocks.getNetworkConnections();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A list of network connections
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkConnectionResponse'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Creates a new network connection
      description: |
        Initiates a new network connection. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnection'
      responses:
        '201':
          description: A Network Connection object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NetworkConnectionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/network_connections/{connectionId}/set_routing_policy':
    patch:
      summary: Update network connection routing policy.
      description: |
        Updates an existing network connection's routing policy. 
        
        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"
        
        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**
        
            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: connectionId
          required: true
          description: The ID of the network connection
          schema:
            type: string
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              properties:
                routingPolicy:
                  $ref: '#/components/schemas/NetworkConnectionRoutingPolicy'
              required:
                - routingPolicy
      responses:
        '200':
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            '*/*':
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
        default:
          $ref: '#/components/responses/Error'
  '/network_connections/{connectionId}/is_third_party_routing/{assetType}':
    get:
      summary: Retrieve third-party network routing validation by asset type.
      description: The Fireblocks Network allows for flexibility around incoming deposits. A receiver can receive network deposits to locations other than Fireblocks. This endpoint validates whether future transactions are routed to the displayed recipient or to a 3rd party.
      tags:
        - Network connections
      parameters:
        - in: path
          name: connectionId
          required: true
          description: The ID of the network connection
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetType
          required: true
          description: The destination asset type
          schema:
            type: string
            enum:
              - CRYPTO
              - SIGNET
              - SEN
              - SIGNET_TEST
              - SEN_TEST
      responses:
        '200':
          description: result for the validation
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            '*/*':
              schema:
                properties:
                  isThirdPartyRouting:
                    type: boolean
                  description:
                    type: string
        default:
          $ref: '#/components/responses/Error'
  '/network_connections/{connectionId}':
    get:
      summary: Get a network connection
      description: |
        Gets a network connection by ID.
        
        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      x-readme:
        code-samples:
          - language: python
            code: network_connection = fireblocks.get_network_connection_by_id(connectionId)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const network_connection = await fireblocks.getNetworkConnection(connectionId);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: connectionId
          required: true
          description: The ID of the connection
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A network connection
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NetworkConnectionResponse'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Deletes a network connection by ID
      description: |
        Deletes an existing network connection specified by its connection ID. 
        
        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: connectionId
          required: true
          description: The ID of the network connection to delete
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            '*/*':
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
        default:
          $ref: '#/components/responses/Error'
  '/network_ids':
    get:
      summary: Returns all network IDs, both local IDs and discoverable remote IDs
      description: |
        Retrieves a list of all local and discoverable remote network IDs. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      responses:
        '200':
          description: A list of network IDs
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/NetworkIdResponse'

        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Creates a new Network ID
      description: |
        Creates a new Network ID. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                routingPolicy:
                  $ref: '#/components/schemas/NetworkIdRoutingPolicy'
              required:
                - name
      responses:
        '201':
          description: Returns the new channel in your workspace
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NetworkIdResponse'
        default:
          $ref: '#/components/responses/Error'
  '/network_ids/{networkId}':
    get:
      summary: Returns specific network ID.
      description: |
        Retrieves a network by its ID. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: networkId
          required: true
          description: The ID of the network
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Network ID
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NetworkIdResponse'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Deletes specific network ID.
      description: |
        Deletes a network by its ID. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: networkId
          required: true
          description: The ID of the network
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Network ID
          content:
            '*/*':
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
        default:
          $ref: '#/components/responses/Error'
  '/network_ids/{networkId}/set_routing_policy':
    patch:
      summary: Update network id routing policy.
      description: |
        Updates the routing policy of a specified network ID. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: networkId
          required: true
          description: The ID of the network
          schema:
            type: string
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              properties:
                routingPolicy:
                  $ref: '#/components/schemas/NetworkIdRoutingPolicy'
              required:
                - routingPolicy
      responses:
        '200':
          description: Network ID
          headers: *req-id-header
          content:
            '*/*':
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
        default:
          $ref: '#/components/responses/Error'
  '/network_ids/{networkId}/set_discoverability':
    patch:
      summary: Update network ID's discoverability.
      description: |
        Update whether or not the network ID is discoverable by others. 

        **Note:** This API call is subject to Flexible Routing Schemes.
        
        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom** 
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      tags:
        - Network connections
      parameters:
        - in: path
          name: networkId
          required: true
          description: The ID of the network
          schema:
            type: string
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                isDiscoverable:
                  type: boolean
              required:
                - isDiscoverable
      responses:
        '200':
          description: Network ID
          headers: *req-id-header
          content:
            '*/*':
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
        default:
          $ref: '#/components/responses/Error'

  #  INTERNAL WALLETS
  /internal_wallets:
    get:
      summary: List internal wallets
      tags:
        - Internal wallets
      description: | 
        Gets a list of internal wallets.

        **Note**: BTC-based assets belonging to whitelisted addresses cannot be retrieved between 00:00 UTC and 00:01 UTC daily due to third-party provider, Blockchair, being unavailable for this 60 second period. Please wait until the next minute to retrieve BTC-based assets.
      responses:
        '200':
          description: A list of internal wallets
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: internalWallet = fireblocks.create_internal_wallet(name, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const internalWallet = await fireblocks.createInternalWallet(name, customerRefId);
          name: Fireblocks SDK Javascript example
      description: Creates a new internal wallet with the requested name.
      responses:
        '200':
          description: A new wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: the wallet's display name
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
  '/internal_wallets/{walletId}':
    get:
      summary: Get assets for internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: internalWallet = fireblocks.get_internal_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.getInternalWallet(walletId);
          name: Fireblocks SDK Javascript example
      description: Returns all assets in an internal wallet by ID.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A Wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.delete_internal_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteInternalWallet(walletId);
          name: Fireblocks SDK Javascript example
      description: Deletes an internal wallet by ID.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet to delete
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/internal_wallets/{walletId}/set_customer_ref_id':
    post:
      summary: Set an AML/KYT customer reference ID for an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.set_customer_ref_id_for_internal_wallet(wallet_id, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.setCustomerRefIdForInternalWallet(walletId, customerRefId);
          name: Fireblocks SDK Javascript example
      description: Sets an AML/KYT customer reference ID for the specific internal wallet.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The wallet ID
          schema:
            type: string
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                customerRefId:
                  description: Customer reference ID
                  type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/internal_wallets/{walletId}/{assetId}':
    get:
      summary: Get an asset from an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: internalWalletAsset = fireblocks.get_internal_wallet_asset(walletId, assetId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const internalWalletAsset = fireblocks.getInternalWalletAsset(walletId, assetId);
          name: Fireblocks SDK Javascript example
      description: Returns information for an asset in an internal wallet.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to return
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WalletAsset'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Add an asset to an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: internalWalletAsset = fireblocks.create_internal_wallet_asset(walletId, assetId, address, tag)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const internalWalletAsset = await fireblocks.createInternalWalletAsset(walletContainerId, assetId, address, tag);
          name: Fireblocks SDK Javascript example
      description: Adds an asset to an existing internal wallet.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to add
          schema:
            type: string
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WalletAsset'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  type: string
                  description: The wallet's address or, for EOS wallets, the account name
                tag:
                  type: string
                  description: for XRP wallets, the destination tag; for EOS, the memo; for the fiat providers (Signet by Signature, SEN by Silvergate, or BLINC by BCB Group), the Bank Transfer Description
              required:
                - address
    delete:
      summary: Delete a whitelisted address from an internal wallet
      tags:
        - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.delete_internal_wallet_asset(walletId, assetId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteInternalWalletAsset(walletId, assetId);
          name: Fireblocks SDK Javascript example
      description: Deletes a whitelisted address (for an asset) from an internal wallet.
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to delete
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # EXTERNAL WALLETS
  /external_wallets:
    get:
      summary: List external wallets
      description: Gets a list of external wallets under the workspace.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWallets = fireblocks.get_external_wallets()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWallets = await fireblocks.getExternalWallets();
          name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A list of external wallets
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create an external wallet
      description: Creates a new external wallet with the requested name.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWallet = fireblocks.create_external_wallet(name, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWallet = await fireblocks.createExternalWallet(name, customerRefId);
          name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A Wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: the wallet's display name
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
  '/external_wallets/{walletId}':
    get:
      summary: Find an external wallet
      description: Returns an external wallet by ID.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWallet = fireblocks.get_external_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWallet = await fireblocks.getExternalWallet(walletId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A Wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete an external wallet
      description: Deletes an external wallet by ID.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.delete_external_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteExternalWallet(walletId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet to delete
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/external_wallets/{walletId}/set_customer_ref_id':
    post:
      summary: Set an AML customer reference ID for an external wallet
      description: Sets an AML/KYT customer reference ID for the specific external wallet.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.set_customer_ref_id_for_external_wallet(wallet_id, customer_ref_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.setCustomerRefIdForExternalWallet(walletId, customerRefId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The wallet ID
          schema:
            type: string
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                customerRefId:
                  description: Customer reference ID
                  type: string
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/external_wallets/{walletId}/{assetId}':
    get:
      summary: Get an asset from an external wallet
      description: Returns an external wallet by wallet ID and asset ID.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWalletAsset = fireblocks.get_external_wallet_asset(walletId, assetId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWalletAsset = fireblocks.getExternalWalletAsset(walletId, assetId)
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to return
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Add an asset to an external wallet.
      description: Adds an asset to an existing external wallet.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWalletAsset = fireblocks.create_external_wallet_asset(walletId, assetId, address, tag)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWalletAsset = await fireblocks.createExternalWalletAsset(walletContainerId, assetId, address, tag);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to add
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  type: string
                  description: The wallet's address (or xpub) of the wallet
                tag:
                  type: string
                  description: For XRP wallets, the destination tag; for EOS/XLM, the memo; for the fiat providers (Signet by Signature, SEN by Silvergate, or BLINC by BCB Group), the Bank Transfer Description
              required:
                - address
    delete:
      summary: Delete an asset from an external wallet
      description: Deletes an external wallet asset by ID.
      tags:
        - External wallets
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.delete_external_wallet_asset(walletId, assetId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteExternalWalletAsset(walletId, assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: walletId
          required: true
          description: The ID of the wallet
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to delete
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # CONTRACTS
  /contracts:
    get:
      summary: List contracts
      description: Gets a list of contracts.
      tags:
        - Contracts
      responses:
        '200':
          description: A list of contracts
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create a contract
      description: Creates a new contract.
      tags:
        - Contracts
      responses:
        '200':
          description: A Wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: the contract's display name
  '/contracts/{contractId}':
    get:
      summary: Find a specific contract
      description: Returns a contract by ID.
      tags:
        - Contracts
      parameters:
        - in: path
          name: contractId
          required: true
          description: The ID of the contract to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A Wallet object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a contract
      description: Deletes a contract by ID.
      tags:
        - Contracts
      parameters:
        - in: path
          name: contractId
          required: true
          description: The ID of the contract to delete
          schema:
            type: string
            minimum: 1
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/contracts/{contractId}/{assetId}':
    get:
      summary: Find a contract asset
      description: Returns a contract asset by ID.
      tags:
        - Contracts
      parameters:
        - in: path
          name: contractId
          required: true
          description: The ID of the contract
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to return
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Add an asset to a contract
      description: Adds an asset to an existing contract.
      tags:
        - Contracts
      parameters:
        - in: path
          name: contractId
          required: true
          description: The ID of the contract
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to add
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: A Wallet Asset object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  type: string
                  description: The contract's address (or xpub) of the wallet
                tag:
                  type: string
                  description: The destination tag, for XRP wallets
              required:
                - address
    delete:
      summary: Delete a contract asset
      description: Deletes a contract asset by ID.
      tags:
        - Contracts
      parameters:
        - in: path
          name: contractId
          required: true
          description: The ID of the contract
          schema:
            type: string
            minimum: 1
        - in: path
          name: assetId
          required: true
          description: The ID of the asset to delete
          schema:
            type: string
            minimum: 1
            x-fb-entity: asset
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # SUPPORTED ASSETS
  '/supported_assets':
    get:
      summary: List all asset types supported by Fireblocks
      description: Returns all asset types supported by Fireblocks.
      tags:
        - Supported assets
      x-readme:
        code-samples:
          - language: python
            code: supportedAssets = fireblocks.get_supported_assets()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const supportedAssets = await fireblocks.getSupportedAssets();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A Transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetTypeResponse'
        default:
          $ref: '#/components/responses/Error'

  # TRANSACTIONS
  /transactions:
    get:
      summary: List transaction history
      description: Lists the transaction history for your workspace.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: transactions = fireblocks.get_transactions()
          name: Fireblocks SDK Python example
        - language: javascript
          code: >
            const transactions = await fireblocks.getTransactions({
             status: args.status,
            after: from
            });
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: before
          description: >-
            Unix timestamp in milliseconds. Returns only transactions created before the
            specified date
          required: false
          schema:
            type: string
        - in: query
          name: after
          description: >-
            Unix timestamp in milliseconds. Returns only transactions created after the
            specified date
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: >-
            You can filter by one of the statuses.
          required: false
          schema:
            type: string
        - in: query
          name: orderBy
          description: The field to order the results by
          required: false
          schema:
            type: string
            enum:
              - createdAt
              - lastUpdated
        - in: query
          name: sort
          description: The direction to order the results by
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: limit
          description: >-
            Limits the number of results. If not provided, a limit of 200 will be used. The maximum allowed limit is 500
          required: false
          schema:
            type: integer
            minimum: 1
            default: 200
        - in: query
          name: sourceType
          description: The source type of the transaction
          required: false
          schema:
            type: string
            enum:
              - VAULT_ACCOUNT
              - EXCHANGE_ACCOUNT
              - INTERNAL_WALLET
              - EXTERNAL_WALLET
              - FIAT_ACCOUNT
              - NETWORK_CONNECTION
              - COMPOUND
              - UNKNOWN
              - GAS_STATION
              - OEC_PARTNER
        - in: query
          name: sourceId
          description: The source ID of the transaction
          required: false
          schema:
            type: string
        - in: query
          name: destType
          description: The destination type of the transaction
          required: false
          schema:
            type: string
            enum:
              - VAULT_ACCOUNT
              - EXCHANGE_ACCOUNT
              - INTERNAL_WALLET
              - EXTERNAL_WALLET
              - FIAT_ACCOUNT
              - NETWORK_CONNECTION
              - COMPOUND
              - ONE_TIME_ADDRESS
              - OEC_PARTNER
        - in: query
          name: destId
          description: The destination ID of the transaction
          required: false
          schema:
            type: string
        - in: query
          name: assets
          description: A list of assets to filter by, seperated by commas
          required: false
          schema:
            type: string
        - in: query
          name: txHash
          description: Returns only results with a specified txHash
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of transactions
          headers: *req-id-header
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new transaction
      description: Creates a new transaction.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: >
            tx_result = client.create_transaction(
            asset_id="BTC",
            amount="50",
            source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id),
            destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id)
            )
          name: Fireblocks SDK Python example
        - language: javascript
          code: >
            const payload: TransactionArguments = {
            assetId: asset,
            source: {
            type: sourceType,
            id: sourceId || 0
            },
            destination: {
            type: destinationType,
            id: String(destinationId)
            },
            amount: String(amount),
            fee: String(fee),
            note: "Created by fireblocks SDK"
            };
            const result = await fireblocks.createTransaction(payload);
          name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: A transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
  '/transactions/estimate_fee':
    post:
      summary: Estimate transaction fee
      description: >-
        Estimates the transaction fee for a transaction request.

        * Note: Supports all Fireblocks assets except ZCash (ZEC).
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: >
            estimated_fee = client.estimate_fee_for_transaction(
            asset_id="BTC",
            amount="50",
            source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id),
            destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id)
            )
          name: Fireblocks SDK Python example
        - language: javascript
          code: >
            const payload: TransactionArguments = {
            assetId: asset,
            source: {
            type: sourceType,
            id: sourceId || 0
            },
            destination: {
            type: destinationType,
            id: String(destinationId)
            },
            amount: Number(amount)
            };
            const estimatedFee = await fireblocks.estimateFeeForTransaction(payload);
          name: Fireblocks SDK Javascript example
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Estimated fees response
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstimatedTransactionFeeResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}':
    get:
      summary: Find a specific transaction
      description: Returns a transaction by ID.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: tx = fireblocks.get_transaction_by_id(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const tx = await fireblocks.getTransactionById(txId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An Transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          $ref: '#/components/responses/Error'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/external_tx_id/{externalTxId}/':
    get:
      summary: Find a specific transaction by external transaction ID
      description: Returns transaction by external transaction ID.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: tx = fireblocks.get_transaction_by_external_tx_id(externalTxId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const tx = await fireblocks.getTransactionByExternalTxId(externalTxId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: externalTxId
          required: true
          description: The external ID of the transaction to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An Transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/set_confirmation_threshold':
    post:
      summary: Set confirmation threshold by transaction ID
      description: Overrides the required number of confirmations for transaction completion by transaction ID.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: set_conf_threshold = client.set_confirmation_threshold_by_tx_id(body)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const setConfThreshold = await fireblocks.setConfirmationThresholdByTxId(body);
          name: Fireblocks SDK Javascript example
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetConfirmationsThresholdRequest'
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Set successfully
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SetConfirmationsThresholdResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/drop':
    post:
      summary: Drop ETH transaction by ID
      description: Drops a stuck ETH transaction and creates a replacement transaction.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.drop_transaction(txId, fee_level)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.dropTransaction(txId, feeLevel);
          name: Fireblocks SDK Javascript example
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropTransactionRequest'
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Created successfully
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DropTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/cancel':
    post:
      summary: Cancel a transaction
      description: Cancels a transaction by ID.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.cancel_transaction_by_id(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.cancelTransactionById(txId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to cancel
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An Transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CancelTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/freeze':
    post:
      summary: Freeze a transaction
      description: Freezes a transaction by ID.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.freeze_transaction(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.freezeTransaction(txId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to freeze
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: freeze response
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FreezeTransactionResponse'
  '/transactions/{txId}/unfreeze':
    post:
      summary: Unfreeze a transaction
      description: Unfreezes a transaction by ID and makes the transaction available again.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.unfreeze_transaction(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.unfreezeTransaction(txId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to unfreeze
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Unfreeze response
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnfreezeTransactionResponse'
  '/transactions/validate_address/{assetId}/{address}':
    get:
      summary: Validate destination address
      description: Checks if an address is valid (for XRP, DOT, XLM, and EOS).
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.(asset_id, address)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.(assetId, address);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: assetId
          required: true
          description: The asset of the address
          schema:
            type: string
            x-fb-entity: asset
        - in: path
          name: address
          required: true
          description: The address to validate
          schema:
            type: string
      responses:
        '200':
          description: An Transaction object
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidateAddressResponse'
        default:
          $ref: '#/components/responses/Error'
  # TXHASH
  '/txHash/{txHash}/set_confirmation_threshold':
    post:
      summary: Set confirmation threshold by transaction hash
      description: Overrides the required number of confirmations for transaction completion by transaction hash.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: set_conf_threshold = client.set_confirmation_threshold_by_tx_hash(body)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const setConfThreshold = await fireblocks.setConfirmationThresholdByTxHash(body);
          name: Fireblocks SDK Javascript example
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetConfirmationsThresholdRequest'
      parameters:
        - in: path
          name: txHash
          required: true
          description: The TxHash
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A list of transactions affected by the change
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SetConfirmationsThresholdResponse'
        default:
          $ref: '#/components/responses/Error'

  # ESTIMATE NETWORK FEE
  '/estimate_network_fee':
    get:
      summary: Estimate the required fee for an asset
      description: Gets the estimated required fee for an asset. For UTXO based assets, the response will contain the suggested fee per byte, for ETH/ETC based assets, the suggested gas price, and for XRP/XLM, the transaction fee.
      tags:
        - Transactions
      x-readme:
        code-samples:
        - language: python
          code: fee_result = fireblocks.get_fee_for_asset(asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const feeResult = await fireblocks.getFeeForAsset(assetId);
          name: Fireblocks SDK Javascript example
      parameters:
        - in: query
          name: assetId
          description: >-
            The asset for which to estimate the fee
          required: true
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: Estimated fees response
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstimatedNetworkFeeResponse'
        default:
          $ref: '#/components/responses/Error'

  # Payments
  '/payments/xb-settlements/configs':
    post:
      tags:
        - Payments
      summary: Create a new cross-border (XB) settlement configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XBSettlementConfigCreationRequestBody'
      responses:
        200:
          description: XB settlement configuration created successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XBSettlementConfigCreationResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Payments
      summary: Get all the cross-border (XB) settlement configurations of a tenant
      responses:
        200:
          description: Returns all the XB settlement configurations of a tenant
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllXBSettlementConfigsResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/payments/xb-settlements/configs/{configId}':
    get:
      tags:
        - Payments
      parameters:
        - in: path
          name: configId
          required: true
          description: The cross-border (XB) settlement configuration ID.
          schema:
            type: string
      summary: Get a specific XB settlement configuration
      responses:
        200:
          description: Returns a XB settlement configuration
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetXBSettlementConfigResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Payments
      parameters:
        - in: path
          name: configId
          required: true
          description: The cross-border (XB) settlement configuration ID.
          schema:
            type: string
      summary: Edit a cross-border (XB) settlement configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XBSettlementConfigEditRequestBody'
      responses:
        200:
          description: XB settlement configuration edited successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XBSettlementConfigEditResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Payments
      parameters:
        - in: path
          name: configId
          required: true
          description: The cross-border (XB) settlement configuration ID.
          schema:
            type: string
      summary: Delete a cross-border (XB) settlement configuration
      responses:
        200:
          description: XB settlement configuration deleted successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XBSettlementConfigDeletionResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/payments/xb-settlements/flows':
    post:
      tags:
        - Payments
      summary: Create a new cross-border (XB) settlement flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XBCreateSettlementFlowRequestBody'
      responses:
        200:
          description: XB settlement flow created successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XBCreateSettlementFlowResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/payments/xb-settlements/flows/{flowId}':
    get:
      tags:
        - Payments
      parameters:
        - in: path
          name: flowId
          required: true
          description: The ID of the cross-border (XB) settlement flow.
          schema:
            type: string
      summary: Get a specific cross-border (XB) settlement flow
      responses:
        200:
          description: Returns XB settlement flow
          headers: *req-id-header
          content:
            application/json:
              schema:
                type: object
                properties:
                  setup:
                    $ref: '#/components/schemas/XBSettlementFlowSetupModel'
                  execution:
                    $ref: '#/components/schemas/XBSettlementFlowExecutionModel'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/payments/xb-settlements/flows/{flowId}/actions/execute':
    post:
      tags:
        - Payments
      parameters:
        - in: path
          name: flowId
          required: true
          description: The ID of the cross-border (XB) settlement flow.
          schema:
            type: string
      summary: Execute cross-border (XB) settlement flow
      responses:
        200:
          description: XB settlement flow executed successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XBSettlementFlowExecutionResponse'
        401:
          description: Unauthorized. Missing / invalid JWT token in Authorization header.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500-599:
          description: Internal error.
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Gas Station
  '/gas_station':
    get:
      summary: Get gas station settings
      description: Returns gas station settings and ETH balance.
      tags:
        - Gas stations
      x-readme:
        code-samples:
          - language: python
            code: gas_station_info = fireblocks.get_gas_station_info()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const gasStationInfo = await fireblocks.gasStationInfo();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: Gas Station properties
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GasStationPropertiesResponse'
        default:
          $ref: '#/components/responses/Error'
  '/gas_station/{assetId}':
    get:
      summary: Get gas station settings by asset
      description: Returns gas station settings and balances for a requested asset.
      tags:
        - Gas stations
      x-readme:
        code-samples:
          - language: python
            code: gas_station_info = fireblocks.get_gas_station_info(asset_id)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const gasStationInfo = await fireblocks.gasStationInfo(assetId);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          required: true
          name: assetId
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      responses:
        '200':
          description: Gas Station properties
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GasStationPropertiesResponse'
        default:
          $ref: '#/components/responses/Error'
  '/gas_station/configuration':
    put:
      summary: Edit gas station settings
      description: Configures gas station settings for ETH.
      tags:
        - Gas stations
      x-readme:
        code-samples:
          - language: python
            code: gas_station = fireblocks.set_gas_station_configuration(gas_threshold, gas_cap, max_gas_price, asset_id)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const gasStation = await fireblocks.setGasStationConfiguration(gasThreshold, gasCap, maxGasPrice)
            name: Fireblocks SDK Javascript example
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GasStationConfiguration'
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'
  '/gas_station/configuration/{assetId}':
    put:
      summary: Edit gas station settings for an asset
      description: Configures gas station settings for a requested asset.
      tags:
        - Gas stations
      parameters:
        - in: path
          required: true
          name: assetId
          description: The ID of the asset
          schema:
            type: string
            x-fb-entity: asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GasStationConfiguration'
      responses:
        '201':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # USERS
  '/users':
    get:
      summary: List users
      description: |
        List all users for the workspace.

        Please note that this endpoint is available only for API keys with Admin permissions.

      tags:
        - Users
      x-readme:
        code-samples:
          - language: python
            code: users = fireblocks.get_users()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const users = await fireblocks.getUsers();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: List of users
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
        default:
          $ref: '#/components/responses/Error'
  '/audits':
    get:
      summary: Get audit logs
      tags:
        - Audit Logs
      parameters:
        - in: query
          name: timePeriod
          required: true
          description: The last time period to fetch audit logs
          schema:
            type: string
            enum:
              - DAY
              - WEEK
      responses:
        '200':
          description: Audit logs from requested time period
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # OFF EXCHANGE V2(collateral)
  '/off_exchange/add':
    post:
      summary: add collateral
      description: add collateral, create deposit request
      tags:
        - Off exchanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollateralRequestBody'
      responses:
        '200':
          description: A transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/off_exchange/remove':
    post:
      summary: remove collateral
      description: remove collateral, create withdraw request
      tags:
        - Off exchanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCollateralRequestBody'
      responses:
        '200':
          description: A transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/off_exchange/settlements/trader':
    post:
      summary: create settlement for a trader
      description: create settlement for a trader
      tags:
        - Off exchanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementRequestBody'
      responses:
        '201':
          description: A settlement object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SettlementResponse'
        default:
          $ref: '#/components/responses/Error'
  '/off_exchange/settlements/transactions':
    get:
      summary: get settlements transactions from exchange
      description: get settlements transactions from exchange
      tags:
        - Off exchanges
      parameters:
        - in: query
          name: mainExchangeAccountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A settlement transactions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSettlementResponse'
        default:
          $ref: '#/components/responses/Error'

  # WEBHOOKS
  '/webhooks/resend':
    post:
      summary: Resend failed webhooks
      description: Resends all failed webhook notifications.
      tags:
        - Webhooks
      x-readme:
        code-samples:
          - language: python
            code: result = fireblocks.resend_webhooks()
            name: Fireblocks SDK Python example
          - language: javascript
            code: const result = await fireblocks.resendWebhooks();
            name: Fireblocks SDK Javascript example
      responses:
        '200':
          description: OK
          headers: *req-id-header
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResendWebhooksResponse'
        default:
          $ref: '#/components/responses/Error'
  '/webhooks/resend/{txId}':
    post:
      summary: Resend failed webhooks for a transaction by ID
      description: Resends failed webhook notifications for a transaction by ID.
      tags:
        - Webhooks
      x-readme:
        code-samples:
          - language: python
            code: result = fireblocks.resend_transaction_webhooks_by_id(txId, resend_created, resend_status_updated)
            name: Fireblocks SDK Python example
          - language: javascript
            code: const result = await fireblocks.resendTransactionWebhooksById(txId, resendCreated, resendStatusUpdated);
            name: Fireblocks SDK Javascript example
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction for webhooks
          schema:
            type: string
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                resendCreated:
                  type: boolean
                resendStatusUpdated:
                  type: boolean
      responses:
        '200':
          description: OK
          headers: *req-id-header
        default:
          $ref: '#/components/responses/Error'

  # NFTs
  "/nfts/ownership/tokens":
    put:
      operationId: findAllTokensByOwner
      summary: Search and update all token balances owned in a vault account.
      description: |
        Search and update balance for all tokens in tenant/vault account
        
        **Note**: Note: This endpoint is now in Beta and is not generally available.

        To enroll in beta & enable this endpoint, contact your Fireblocks Customer Success Manager or reach out to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      parameters:
      - name: vaultAccountId
        required: true
        in: query
        description: Vault account filter
        schema:
          type: string
      - name: blockchainDescriptor
        required: true
        in: query
        description: Blockchain descriptor filter
        schema:
          type: string
      responses:
        '202':
          description: ''
          headers: *req-id-header
      tags:
      - NFTs_Beta

    get:
      operationId: getAllNFTsByOwner
      summary: List all tokens and their balances owned in a vault account.
      description: | 
        Fetch all owned tokens in tenant with their corresponding balance.
        
        Can be filtered by blockchain, vault account ID and specific IDs.

        **Note**: This endpoint is now in Beta, disabled for general availability at this time.

        To enroll in beta & enable this endpoint, contact your Fireblocks Customer Success Manager or reach out to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      parameters:
      - name: blockchainDescriptor
        required: false
        in: query
        description: Blockchain descriptor filter
        schema:
          type: string
      - name: vaultAccountId
        required: false
        in: query
        description: Vault account filter
        schema:
          type: string
      - name: ids
        required: false
        in: query
        description: A comma separated list of token IDs. Up to 100 are allowed in a single request.
        schema:
          type: string
      - name: pageCursor
        required: false
        in: query
        description: Page cursor to fetch
        schema:
          type: string
      - name: pageSize
        required: false
        in: query
        description: Items per page (max 100)
        schema:
          type: number
      responses:
        '200':
          description: ''
          headers: *req-id-header
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TokenOwnershipResponse"
      tags:
      - NFTs_Beta
  "/nfts/tokens/{id}":
    put:
      operationId: refreshNFT
      summary: Update token metadata by ID.
      description: | 
        Refresh token metadata

        **Note**: This endpoint is now in Beta, disabled for general availability at this time.

        To enroll in beta & enable this endpoint, contact your Fireblocks Customer Success Manager or reach out to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      parameters:
      - name: id
        required: true
        in: path
        description: token id to refresh
        schema:
          type: string
      responses:
        '202':
          description: ''
          headers: *req-id-header
      tags:
      - NFTs_Beta

    get:
      operationId: getTokenById
      summary: Retrieve a list of tokens by ID.
      description: | 
        Fetch a token by ID

        **Note**: This endpoint is now in Beta, disabled for general availability at this time.

        To enroll in beta & enable this endpoint, contact your Fireblocks Customer Success Manager or reach out to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).

      parameters:
      - name: id
        required: true
        in: path
        description: token id to fetch
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: *req-id-header
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenResponse"
      tags:
      - NFTs_Beta
  "/nfts/tokens":
    get:
      operationId: getToken
      summary: List all tokens in a vault account.
      description: | 
        Fetch a list of all tokens.
        
        **Note**: This endpoint is now in Beta, disabled for general availability at this time.

        To enroll in beta & enable this endpoint, contact your Fireblocks Customer Success Manager or reach out to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).

      parameters:
      - name: ids
        required: true
        in: query
        description: comma separated of tokens ids to fetch
        schema:
          type: string
      - name: pageCursor
        in: query
        description: Page cursor to fetch
        schema:
          type: string
      - name: pageSize
        in: query
        description: Items per page (max 100)
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: *req-id-header
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TokenResponse"
      tags:
      - NFTs_Beta

 # WEB3 CONNECTIONS
  /connections:
    get:
      operationId: get
      summary: List all open Web3 connections.
      description: Get open Web3 connections.
      parameters:
        - name: order
          required: false
          in: query
          description: List order; ascending or descending.
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
        - name: filter
          required: false
          in: query
          description: Parsed filter object
          examples:
            object:
              summary: The filter object
              description: ''
              value:
                id: string
                userId: string
                vaultAccountId: number
                connectionMethod: string
                feeLevel: string
                appUrl: string
                appName: string
            stringified:
              summary: The stringified parsed object
              description: >-
                About stringified parsed objects: 


                * Each key-value pair is separated by '=', and each pair is
                separated by ',' (you can use [`qs`](https://www.npmjs.com/package/qs) package for this)
              value: >-
                id=string,userId=string,vaultAccountId=number,connectionMethod=string,feeLevel=string,appUrl=string,appName=string
          schema:
            type: object
            properties:
              id:
                type: string
              userId:
                type: string
              vaultAccountId:
                type: number
              connectionMethod:
                type: string
              feeLevel:
                type: string
              appUrl:
                type: string
              appName:
                type: string
        - name: sort
          required: false
          in: query
          description: Property to sort Web3 connections by.
          schema:
            type: string
            enum:
              - id
              - userId
              - vaultAccountId
              - createdAt
              - feeLevel
              - appUrl
              - appName
            default: createdAt
        - name: pageSize
          required: false
          in: query
          description: Amount of results to return in the next page.
          schema:
            type: number
            default: 10
            maximum: 50
        - name: next
          required: false
          in: query
          description: Cursor to the next page
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionsResponse'
        '400':
          description: Query parameters were invalid
          headers: *req-id-header
        '500':
          description: Something went wrong
          headers: *req-id-header
      tags:
        - Web3 connections
  /connections/wc:
    post:
      operationId: create
      summary: Create a new Web3 connection.
      description: |-
        Initiate a new Web3 connection.

        * Note: After this succeeds, make a request to `PUT /v1/connections/wc/{id}` (below) to approve or reject the new Web3 connection. 
        

      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
      responses:
        '201':
          description: Web3 connection initiated successfully
          headers: *req-id-header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionResponse'
        '400':
          description: Invalid data sent
          headers: *req-id-header
        '500': &ref_0
          description: Something went wrong
          headers: *req-id-header
      tags: &ref_1
        - Web3 connections
  /connections/wc/{id}:
    put:
      operationId: submit
      summary: Respond to a pending Web3 connection request.
      description: >-
        Submit a response to *approve* or *reject* an initiated Web3 connection. 

        * Note: This call is used to complete your `POST /v1/connections/wc/` request.


        After this succeeds, your new Web3 connection is created and functioning.
      parameters:
        - name: id
          description: The ID of the initiated Web3 connection to approve.
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondToConnectionRequest'
      responses:
        '200':
          description: Connection submitted successfully
          headers: *req-id-header
        '400':
          description: Invalid data sent
          headers: *req-id-header
        '404':
          description: Connection not found
          headers: *req-id-header
        '500': *ref_0
      tags: *ref_1
    delete:
      operationId: remove
      summary: Remove an existing Web3 connection.
      description: Remove a Web3 connection
      parameters:
        - name: id
          description: The ID of the existing Web3 connection to remove.
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Connection removed successfully
          headers: *req-id-header
        '404':
          description: Connection not found
          headers: *req-id-header
        '500': *ref_0
      tags: *ref_1

components:
  responses:
    Error:
      description: Error Response
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  headers:
    X-Request-ID:
      schema:
        type: string
      description: Unique ID correlated to the API request. Please provide it in any support ticket you create or on Github issues related to Fireblocks SDKs
  requestBodies:
    NewWallet:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                description: the wallet's display name
    WalletAddressProperties:
      content:
        application/json:
          schema:
            properties:
              address:
                type: string
                description: The wallet's address (or xpub) of the wallet
  securitySchemes:
    bearerTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    MediaEntityResponse:
      type: object
      properties:
        url:
          type: string
        contentType:
          type: string
      required:
      - url
      - contentType
    TokenCollectionResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
      required:
      - id
      - name
      - symbol
    TokenResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique token id with fireblocks
        tokenId:
          type: string
          description: Token id within the contract/collection
        standard:
          type: string
          description: ERC721 / ERC1155
        metadataURI:
          type: string
          description: URL to original token metadata JSON
        media:
          description: Media items extracted from metadata JSON
          type: array
          items:
            $ref: '#/components/schemas/MediaEntityResponse'
        collection:
          description: Parent collection information
          allOf:
            - $ref: '#/components/schemas/TokenCollectionResponse'
        blockchainDescriptor:
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - id
        - tokenId
        - standard
        - metadataURI
        - media
        - collection
        - blockchainDescriptor
        - description
        - name
    TokenOwnershipResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique token id with fireblocks
        tokenId:
          type: string
          description: Token id within the contract/collection
        standard:
          type: string
          description: ERC721 / ERC1155
        metadataURI:
          type: string
          description: URL to original token metadata JSON
        media:
          description: Media items extracted from metadata JSON
          type: array
          items:
            $ref: '#/components/schemas/MediaEntityResponse'
        collection:
          description: Parent collection information
          allOf:
            - $ref: '#/components/schemas/TokenCollectionResponse'
        vaultAccountId:
          type: string
        balance:
          type: number
        blockchainDescriptor:
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - id
        - tokenId
        - standard
        - metadataURI
        - media
        - collection
        - vaultAccountId
        - balance
        - blockchainDescriptor
        - description
        - name
    WalletAsset:
      type: object
      properties:
        id:
          type: string
        balance:
          type: string
        lockedAmount:
          type: string
        status:
          $ref: '#/components/schemas/ConfigChangeRequestStatus'
        address:
          type: string
        tag:
          type: string
        activationTime:
          type: string
    ExternalWalletAsset:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/ConfigChangeRequestStatus'
        address:
          type: string
        tag:
          type: string
        activationTime:
          type: string
    ExchangeAsset:
      type: object
      properties:
        id:
          type: string
        balance:
          type: string
        lockedAmount:
          type: string
        total:
          type: string
        available:
          type: string
    ExchangeTradingAccount:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeAsset'
    FiatAsset:
      type: object
      properties:
        id:
          type: string
        balance:
          type: string
    CreateVaultAssetResponse:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        eosAccountName:
          type: string
        status:
          type: string
        activationTxId:
          type: string
    RewardsInfo:
      type: object
      properties:
        pendingRewards:
          description: Amount that is pending for rewards
          type: string
    VaultAsset:
      type: object
      properties:
        id:
          type: string
        total:
          description: The total wallet balance. In EOS this value includes the network balance, self staking and pending refund. For all other coins it is the balance as it appears on the blockchain.
          type: string
        balance:
          deprecated: true
          description: Deprecated - replaced by "total"
          type: string
        available:
          description: Funds available for transfer. Equals the blockchain balance minus any locked amounts
          type: string
        pending:
          description: The cumulative balance of all transactions pending to be cleared
          type: string
        frozen:
          description: The cumulative frozen balance
          type: string
        lockedAmount:
          description: Funds in outgoing transactions that are not yet published to the network
          type: string
        staked:
          description: Staked balance
          type: string
        maxBip44AddressIndexUsed:
          description: The maximum BIP44 index used in deriving addresses for this wallet
          type: number
        maxBip44ChangeAddressIndexUsed:
          description: The maximum BIP44 index used in deriving change addresses for this wallet
          type: number
        totalStakedCPU:
          type: number
          description: Deprecated
        totalStakedNetwork:
          type: string
          description: Deprecated
        selfStakedCPU:
          type: string
          description: Deprecated
        selfStakedNetwork:
          type: string
          description: Deprecated
        pendingRefundCPU:
          type: string
          description: Deprecated
        pendingRefundNetwork:
          type: string
          description: Deprecated
        blockHeight:
          type: string
        blockHash:
          type: string
        rewardsInfo:
          $ref: '#/components/schemas/RewardsInfo'
    VaultWalletAddress:
      type: object
      properties:
        assetId:
          type: string
          x-fb-entity: asset
        address:
          type: string
        description:
          type: string
        tag:
          type: string
        type:
          type: string
        customerRefId:
          type: string
        addressFormat:
          type: string
          enum:
            - SEGWIT
            - LEGACY
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        bip44AddressIndex:
          type: integer
        userDefined:
          type: boolean
    CreateAddressResponse:
      type: object
      properties:
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        bip44AddressIndex:
          type: integer
    VaultAccountsPagedResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/VaultAccount'
        paging:
          type: object
          properties:
            before:
              type: string
            after:
              type: string
        previousUrl:
          type: string
        nextUrl:
          type: string
    VaultAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/VaultAsset'
        hiddenOnUI:
          type: boolean
        customerRefId:
          type: string
        autoFuel:
          type: boolean
    UnmanagedWallet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        customerRefId:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/WalletAsset'
      required:
        - id
        - name
        - status
    ExchangeAccount:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ExchangeType'
        name:
          type: string
          description: Display name of the exchange account
        status:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeAsset'
        tradingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeTradingAccount'
        isSubaccount:
          description: True if the account is a subaccount in an exchange
          type: boolean
        mainAccountId:
          description: if the account is a sub-account, the ID of the main account
          type: string
    FiatAccount:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/FiatAccountType'
        name:
          type: string
          description: Display name of the fiat account
        address:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/FiatAsset'
    OneTimeAddress:
      type: object
      properties:
        address:
          type: string
        tag:
          type: string
      required:
        - address
    TransferPeerPath:
      type: object
      properties:
        type:
          type: string
          enum:
            - VAULT_ACCOUNT
            - EXCHANGE_ACCOUNT
            - INTERNAL_WALLET
            - EXTERNAL_WALLET
            - NETWORK_CONNECTION
            - FIAT_ACCOUNT
            - COMPOUND
            - GAS_STATION
            - ONE_TIME_ADDRESS
            - UNKNOWN
        id:
          type: string
      required:
        - type
    DestinationTransferPeerPath:
      allOf:
        - $ref: '#/components/schemas/TransferPeerPath'
        - type: object
        - description: (optional) Destination address. You will only be able to provide this parameter if the type is enabled for OneTimeAddress.
          properties:
            oneTimeAddress:
              $ref: '#/components/schemas/OneTimeAddress'
    CreateTransactionResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        systemMessages:
          $ref: '#/components/schemas/SystemMessageInfo'
    SystemMessageInfo:
      type: object
      properties:
        type:
          type: string
          enum:
           - WARN
           - BLOCK
        message:
          type: string
          description: A response from Fireblocks that communicates a message about the health of the process being performed. If this object is returned with data, you should expect potential delays or incomplete transaction statuses.
          example: Slow transaction processing. Outgoing transactions might be stuck.
    CancelTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    UnfreezeTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    FreezeTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    AmlScreeningResult:
      type: object
      properties:
        provider:
          type: string
        payload:
          type: object
    FeeInfo:
      type: object
      properties:
        networkFee:
          type: string
        serviceFee:
          type: string
        gasPrice:
          type: string
    BlockInfo:
      type: object
      properties:
        blockHeight:
          type: string
        blockHash:
          type: string
    AuthorizationInfo:
      type: object
      properties:
        allowOperatorAsAuthorizer:
          type: boolean
        logic:
          type: string
          enum:
            - AND
            - OR
        groups:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationGroups'
    AuthorizationGroups:
      type: object
      properties:
        th:
          type: number
        users:
          type: object
          additionalProperties:
            type: string
            enum:
              - PENDING_AUTHORIZATION
              - APPROVED
              - REJECTED
              - NA
    AmountInfo:
      type: object
      properties:
        amount:
          type: string
        requestedAmount:
          type: string
        netAmount:
          type: string
        amountUSD:
          type: string
    RewardInfo:
      type: object
      properties:
        srcRewards:
          type: string
        destRewards:
          type: string
    TransferPeerPathResponse:
      allOf:
        - $ref: '#/components/schemas/TransferPeerPath'
        - type: object
          properties:
            name:
              type: string
            subType:
              type: string
              description: The specific exchange, fiat account or unmanaged wallet (either INTERNAL / EXTERNAL)
    TransactionResponse:
      type: object
      properties:
        id:
          type: string
        assetId:
          type: string
          x-fb-entity: asset
        source:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        contractCallDecodedData:
          description: Contains decoded data for smart contract transaction calls.
          type: object
          properties:
            contractName:
              type: string
            functionCalls:
              type: array
              items:
                type: object
        requestedAmount:
          description: The amount requested by the user
          type: number
        amount:
          description: If the transfer is a withdrawal from an exchange, the actual amount that was requested to be transferred. Otherwise, the requested amount
          type: number
        netAmount:
          description: The net amount of the transaction, after fee deduction
          type: number
        amountUSD:
          description: The USD value of the requested amount
          type: number
          nullable: true
        serviceFee:
          description: The total fee deducted by the exchange from the actual requested amount (serviceFee = amount - netAmount)
          type: number
        fee:
          description: Deprecated - replaced by "networkFee"
          type: number
          deprecated: true
        networkFee:
          description: The fee paid to the network
          type: number
        createdAt:
          type: number
          description: Unix timestamp
        lastUpdated:
          type: number
          description: Unix timestamp
        status:
          type: string
          enum:
            - SUBMITTED
            - PENDING_SIGNATURE
            - PENDING_AUTHORIZATION
            - COMPLETED
            - CONFIRMING
            - FAILED
            - REJECTED
            - CANCELLING
            - CANCELLED
            - BROADCASTING
            - BLOCKED
            - TIMEOUT
            - QUEUED
            - PENDING_3RD_PARTY
            - PENDING_3RD_PARTY_MANUAL_APPROVAL
            - PENDING_AML_SCREENING
            - PARTIALLY_COMPLETED
        txHash:
          type: string
        tag:
          type: string
        subStatus:
          $ref: '#/components/schemas/TransactionSubStatus'
        destinationAddress:
          type: string
        sourceAddress:
          type: string
          description: >- 
             Note: If the status is `CONFIRMING`, `COMPLETED`, or has been `CONFIRMING`; then moved forward to `FAILED` or `REJECTED`, then this parameter will contain the source address. In any other case, this parameter will be empty.
        destinationAddressDescription:
          type: string
        destinationTag:
          type: string
        signedBy:
          type: array
          items:
            type: string
        createdBy:
          type: string
        rejectedBy:
          type: string
        addressType:
          type: string
        note:
          type: string
        exchangeTxId:
          type: string
        feeCurrency:
          type: string
        operation:
          $ref: '#/components/schemas/TransactionOperation'
        networkRecords:
          type: array
          items:
            $ref: '#/components/schemas/NetworkRecord'
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        customerRefId:
          type: string
        numOfConfirmations:
          type: number
        amountInfo:
          $ref: '#/components/schemas/AmountInfo'
        feeInfo:
          $ref: '#/components/schemas/FeeInfo'
        signedMessages:
           $ref: '#/components/schemas/SignedMessage'
        extraParameters:
          type: object
          properties: {}
        externalTxId:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponseDestination'
        blockInfo:
          $ref: '#/components/schemas/BlockInfo'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
        index:
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
        feePayerInfo:
          type: object
          properties:
            feePayerAccountId:
              type: string
        treatAsGrossAmount:
          type: boolean
        systemMessages:
          $ref: '#/components/schemas/SystemMessageInfo'
    TransactionResponseDestination:
      type: object
      properties:
        amount:
          type: string
        amountUSD:
          type: string
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
    NetworkRecord:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        txHash:
          type: string
        networkFee:
          type: string
        assetId:
          type: string
          x-fb-entity: asset
        netAmount:
          description: The net amount of the transaction, after fee deduction
          type: string
        isDropped:
          type: boolean
        type:
          type: string
        destinationAddress:
          type: string
        sourceAddress:
          type: string
        amountUSD:
          type: string
        index:
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
    AssetTypeResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - ALGO_ASSET
            - BASE_ASSET
            - BEP20
            - COMPOUND
            - ERC20
            - FIAT
            - SOL_ASSET
            - TRON_TRC20
            - XLM_ASSET
            - XDB_ASSET
        contractAddress:
          type: string
        nativeAsset:
          type: string
        decimals:
          type: number
      required:
        - id
        - name
        - type
    NetworkConnection:
      type: object
      properties:
        localNetworkId:
          type: string
          description: The network ID of the profile trying to create the connection.
        remoteNetworkId:
          type: string
          description: The network ID the profile is attempting to connect to.
        routingPolicy:
          $ref: '#/components/schemas/NetworkConnectionRoutingPolicy'
      required:
        - localNetworkId
        - remoteNetworkId
    NetworkConnectionResponse:
      type: object
      properties:
        id:
          type: string
        localChannel:
          allOf:
            - $ref: '#/components/schemas/NetworkChannel'
          deprecated: true
          description: "Deprecated - Replaced by `localNetworkId`"
        remoteChannel:
          allOf:
            - $ref: '#/components/schemas/NetworkChannel'
          deprecated: true
          description: "Deprecated - Replaced by `remoteNetworkId`"
        status:
          $ref: '#/components/schemas/ConfigChangeRequestStatus'
        localNetworkId:
          $ref: '#/components/schemas/NetworkId'
        remoteNetworkId:
          $ref: '#/components/schemas/NetworkId'
        routingPolicy:
          $ref: '#/components/schemas/NetworkConnectionRoutingPolicy'
      required:
        - id
        - localNetworkId
        - remoteNetworkId
        - routingPolicy
        - status
    EstimatedTransactionFeeResponse:
      type: object
      properties:
        low:
          $ref: '#/components/schemas/TransactionFee'
        medium:
          $ref: '#/components/schemas/TransactionFee'
        high:
          $ref: '#/components/schemas/TransactionFee'
      required:
        - low
        - medium
        - high
    EstimatedNetworkFeeResponse:
      type: object
      properties:
        low:
          $ref: '#/components/schemas/NetworkFee'
        medium:
          $ref: '#/components/schemas/NetworkFee'
        high:
          $ref: '#/components/schemas/NetworkFee'
      required:
        - low
        - medium
        - high
    GasStationPropertiesResponse:
      type: object
      properties:
        balance:
          type: object
        configuration:
          $ref: '#/components/schemas/GasStationConfiguration'
      required:
        - low
        - medium
        - high
    TransactionFee:
      type: object
      properties:
        feePerByte:
          type: string
        gasPrice:
          type: string
        gasLimit:
          type: string
        networkFee:
          type: string
        baseFee:
          description: (optional) Base Fee according to EIP-1559 (ETH assets)
          type: string
        priorityFee:
          description: (optional) Priority Fee according to EIP-1559 (ETH assets)
          type: string
    NetworkFee:
      type: object
      properties:
        feePerByte:
          type: string
        gasPrice:
          type: string
        networkFee:
          type: string
        baseFee:
          description: (optional) Base Fee according to EIP-1559 (ETH assets)
          type: string
        priorityFee:
          description: (optional) Priority Fee according to EIP-1559 (ETH assets)
          type: string
    GasStationConfiguration:
      type: object
      properties:
        gasThreshold:
          type: string
        gasCap:
          type: string
        maxGasPrice:
          type: string
    NetworkChannel:
      deprecated: true
      description: "Deprecated in the only used reference - NetworkConnectionResponse"
      type: object
      properties:
        networkId:
          type: string
        name:
          type: string
    NetworkId:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    NetworkIdResponse:
      allOf:
        - $ref: '#/components/schemas/NetworkId'
        - type: object
          properties:
            routingPolicy:
              $ref: '#/components/schemas/NetworkIdRoutingPolicy'
            isDiscoverable:
              type: boolean
              description: The specific network is discoverable.
    TransactionRequest:
      type: object
      properties:
        assetId:
          type: string
          x-fb-entity: asset
        source:
          $ref: '#/components/schemas/TransferPeerPath'
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
        amount:
          description: >-
            The amount of the transaction, in the asset's unit. A numeric value representation (either string or number) is required.
          oneOf:
            - type: number
            - type: string
        fee:
          description: >-
            - For BTC based assets, the fee per bytes in the asset's smallest unit (Satoshi/Latoshi etc.) A numeric value representation is required. For XRP, the fee for the transaction.
          oneOf:
            - type: number
            - type: string
        feeLevel:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        priorityFee:
          description: >-
            - For ETH based assets only, the fee for eip-1559 transaction pricing mechanism. Value is in gwei.
            - A numeric value representation is required.
          oneOf:
            - type: number
            - type: string
        failOnLowFee:
          type: boolean
        maxFee:
          description: >-
            - For ETH based assets only, must be provided when using the priorityFee parameter. This will be used to limit the fee max possible fee (according to eip-1559). Value is in gwei.

            - For other assets, it fails a transaction when the automatically selected fee is higher than the provided value.

            - A numeric value representation is required.
          type: string
        gasPrice:
          description: >-
            For ETH based asset only. this will be used instead of the fee property. Value is in gwei. A numeric value representation is required.
          oneOf:
            - type: number
            - type: string
        gasLimit:
          description: >-
            A numeric value representation is required.
          oneOf:
            - type: number
            - type: string
        networkFee:
          description: >-
            A numeric value representation is required.
          oneOf:
            - type: number
            - type: string
        note:
          type: string
        autoStaking:
          type: boolean
        networkStaking:
          oneOf:
            - type: number
            - type: string
        cpuStaking:
          oneOf:
            - type: number
            - type: string
        extraParameters:
          type: object
          properties: {}
        operation:
          $ref: '#/components/schemas/TransactionOperation'
        customerRefId:
          type: string
        replaceTxByHash:
          type: string
        externalTxId:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TransactionRequestDestination'
        treatAsGrossAmount:
          type: boolean
        forceSweep:
          type: boolean
        feePayerInfo:
          type: object
          properties:
            feePayerAccountId:
              description: >-
                A numeric value representation is required.
              type: string
    TransactionRequestDestination:
      type: object
      properties:
        amount:
          type: string
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
    ExchangeType:
      type: string
      enum:
      - BINANCE
      - BINANCEUS
      - BITFINEX
      - BITHUMB
      - BITMEX
      - BITSO
      - BITSTAMP
      - BITTREX
      - CIRCLE
      - COINBASEPRO
      - COINMETRO
      - COINSPRO
      - CRYPTOCOM
      - DERIBIT
      - FTX
      - FIXUS
      - GEMINI
      - HITBTC
      - HUOBI
      - KORBIT
      - KRAKEN
      - LIQUID
      - POLONIEX
      - OKCOIN
      - OKEX
      - SEEDCX
    FiatAccountType:
      type: string
      enum:
        - SIGNET
        - BLINC
        - SILVERGATE
    ConfigChangeRequestStatus:
      type: string
      enum:
        - WAITING_FOR_APPROVAL
        - APPROVED
        - CANCELLED
        - REJECTED
        - FAILED
    TransactionOperation:
      type: string
      enum:
        - BURN
        - CONTRACT_CALL
        - MINT
        - RAW
        - REDEEM_FROM_COMPOUND
        - SUPPLY_TO_COMPOUND
        - TRANSFER
        - TYPED_MESSAGE
      default: TRANSFER
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: number


    TransactionSubStatus:
      type: string
      enum:
        - INSUFFICIENT_FUNDS
        - AMOUNT_TOO_SMALL
        - UNSUPPORTED_ASSET
        - UNAUTHORISED__MISSING_PERMISSION
        - INVALID_SIGNATURE
        - API_INVALID_SIGNATURE
        - UNAUTHORISED__MISSING_CREDENTIALS
        - UNAUTHORISED__USER
        - UNAUTHORISED__DEVICE
        - INVALID_UNMANAGED_WALLET
        - INVALID_EXCHANGE_ACCOUNT
        - INSUFFICIENT_FUNDS_FOR_FEE
        - INVALID_ADDRESS
        - WITHDRAW_LIMIT
        - API_CALL_LIMIT
        - ADDRESS_NOT_WHITELISTED
        - TIMEOUT
        - CONNECTIVITY_ERROR
        - THIRD_PARTY_INTERNAL_ERROR
        - CANCELLED_EXTERNALLY
        - INVALID_THIRD_PARTY_RESPONSE
        - VAULT_WALLET_NOT_READY
        - MISSING_DEPOSIT_ADDRESS
        - ONE_TIME_ADDRESS_DISABLED
        - INTERNAL_ERROR
        - UNKNOWN_ERROR
        - AUTHORIZER_NOT_FOUND
        - INSUFFICIENT_RESERVED_FUNDING
        - MANUAL_DEPOSIT_ADDRESS_REQUIRED
        - INVALID_FEE
        - ERROR_UNSUPPORTED_TRANSACTION_TYPE
        - UNSUPPORTED_OPERATION
        - 3RD_PARTY_PROCESSING
        - PENDING_BLOCKCHAIN_CONFIRMATIONS
        - 3RD_PARTY_CONFIRMING
        - CONFIRMED
        - 3RD_PARTY_COMPLETED
        - CANCELLED_BY_USER
        - 3RD_PARTY_CANCELLED
        - 3RD_PARTY_REJECTED
        - AML_SCREENING_REJECTED
        - BLOCKED_BY_POLICY
        - FAILED_AML_SCREENING
        - PARTIALLY_FAILED
        - 3RD_PARTY_FAILED
        - ZERO_BALANCE_IN_PERMANENT_ADDRESS
        - GAS_PRICE_TOO_LOW_FOR_RBF
        - DROPPED_BY_BLOCKCHAIN
        - INVALID_FEE_PARAMS
        - MISSING_TAG_OR_MEMO
        - SIGNING_ERROR
        - GAS_LIMIT_TOO_LOW
        - TOO_MANY_INPUTS
        - MAX_FEE_EXCEEDED
        - ACTUAL_FEE_TOO_HIGH
        - INVALID_CONTRACT_CALL_DATA
        - INVALID_NONCE_TOO_LOW
        - INVALID_NONCE_TOO_HIGH
        - INVALID_NONCE_FOR_RBF
        - FAIL_ON_LOW_FEE
        - TOO_LONG_MEMPOOL_CHAIN
        - TX_OUTDATED
        - INCOMPLETE_USER_SETUP
        - SIGNER_NOT_FOUND
        - INVALID_TAG_OR_MEMO
        - NEED_MORE_TO_CREATE_DESTINATION
        - NON_EXISTING_ACCOUNT_NAME
        - ENV_UNSUPPORTED_ASSET
        - DEST_TYPE_NOT_SUPPORTED
      description: >
        - `INSUFFICIENT_FUNDS` - Not enough funds to fulfill the withdraw request

        - `AMOUNT_TOO_SMALL` - Attempt to withdraw an amount below the allowed minimum

        - `UNSUPPORTED_ASSET` - Asset is not supported

        - `UNAUTHORISED__MISSING_PERMISSION` - Third party (e.g. exchange) API missing permission

        - `INVALID_SIGNATURE` - Invalid transaction signature

        - `API_INVALID_SIGNATURE` - Third party (e.g. exchange) API call invalid signature

        - `UNAUTHORISED__MISSING_CREDENTIALS` - Missing third party (e.g. exchange) credentials

        - `UNAUTHORISED__USER` - Attempt to initiate or approve a transaction by an unauthorised user

        - `UNAUTHORISED__DEVICE` - Unauthorised user's device

        - `INVALID_UNMANAGED_WALLET` - Unmanaged wallet is disabled or does not exist

        - `INVALID_EXCHANGE_ACCOUNT` - Exchange account is disabled or does not exist

        - `INSUFFICIENT_FUNDS_FOR_FEE` - Not enough balance to fund the requested transaction

        - `INVALID_ADDRESS` - Unsupported address format

        - `WITHDRAW_LIMIT` - Transaction exceeds the exchange's withdraw limit

        - `API_CALL_LIMIT` - Exceeded third party (e.g. exchange) API call limit

        - `ADDRESS_NOT_WHITELISTED` - Attempt to withdraw from an exchange to a non whitelisted address

        - `TIMEOUT` - Request timeout

        - `CONNECTIVITY_ERROR` - Network error

        - `THIRD_PARTY_INTERNAL_ERROR` - Received an internal error response from a third party service

        - `CANCELLED_EXTERNALLY` - Transaction was canceled by a third party service

        - `INVALID_THIRD_PARTY_RESPONSE` - Unrecognized third party response

        - `VAULT_WALLET_NOT_READY` - Vault wallet is not ready

        - `MISSING_DEPOSIT_ADDRESS` - Could not retrieve a deposit address from the exchange

        - `INTERNAL_ERROR` - Internal error while processing the transaction

        - `UNKNOWN_ERROR` - Unexpected error

        - `AUTHORIZER_NOT_FOUND` - No authorizer found to approve the operation or the only authorizer found is the initiator

        - `INSUFFICIENT_RESERVED_FUNDING` - Some assets require a minimum of reserved funds being kept on the account

        - `MANUAL_DEPOSIT_ADDRESS_REQUIRED` - Error while retrieving a deposit address from an exchange. Please generate a deposit address for your exchange account

        - `INVALID_FEE` - Transaction fee is not in the allowed range

        - `ERROR_UNSUPPORTED_TRANSACTION_TYPE` - Attempt to execute an unsupported transaction type

        - `UNSUPPORTED_OPERATION` - Unsupported operation

        - `3RD_PARTY_PROCESSING` - The transaction is pending approval by the 3rd party service (e.g exchange)

        - `PENDING_BLOCKCHAIN_CONFIRMATIONS` - Pending Blockchain confirmations

        - `3RD_PARTY_CONFIRMING` - Pending confirmation on the exchange

        - `CONFIRMED` - Confirmed on the blockchain

        - `3RD_PARTY_COMPLETED` - Completed on the 3rd party service (e.g exchange)

        - `PENDING_BLOCKCHAIN_CONFIRMATIONSREJECTED_BY_USER` - The transaction was rejected by one of the signers

        - `CANCELLED_BY_USER` - The transaction was canceled via the Console or the API

        - `3RD_PARTY_CANCELLED` - Cancelled on the exchange

        - `3RD_PARTY_REJECTED` - Rejected or not approved in time by user

        - `AML_SCREENING_REJECTED` - Rejected on AML Screening

        - `BLOCKED_BY_POLICY` - Transaction is blocked due to a policy rule

        - `FAILED_AML_SCREENING` - AML Screening failed

        - `PARTIALLY_FAILED` - Only for Aggregated transactions. One or more of the associated transaction records failed

        - `3RD_PARTY_FAILED` - Transaction failed at the exchange

        - `ZERO_BALANCE_IN_PERMANENT_ADDRESS` - Not enough BTC balance to fund the requested transaction in legacy address

        - 'DROPPED_BY_BLOCKCHAIN' - The transaction was replaced by another transaction with higher fee

        - 'INVALID_FEE_PARAMS' - Fee parameters are inconsistent or unknown

        - 'MISSING_TAG_OR_MEMO' - A tag or memo is required to send funds to a third party address, including all exchanges

        - 'SIGNING_ERROR' - The transaction signing failed, resubmit the transaction to sign again

        - 'GAS_LIMIT_TOO_LOW' - The transaction was rejected because the gas limit was set too low

        -  'MAX_FEE_EXCEEDED' - Gas price is currently above selected max fee

        - 'ACTUAL_FEE_TOO_HIGH' - Chosen fee is below current price

        - 'INVALID_CONTRACT_CALL_DATA' - Transaction data was not encoded properly

        - 'INVALID_NONCE_TOO_LOW' - Illegal nonce

        - 'INVALID_NONCE_TOO_HIGH' - Illegal nonce

        - 'INVALID_NONCE_FOR_RBF' - No matching nonce

        - 'FAIL_ON_LOW_FEE' - Current blockchain fee is higher than selected

        - 'TOO_LONG_MEMPOOL_CHAIN' - Too many unconfirmed transactions from this address

        - 'TX_OUTDATED' - Nonce already used

        - 'INCOMPLETE_USER_SETUP' - MPC setup was not completed

        - 'SIGNER_NOT_FOUND' - Signer not found

        - 'INVALID_TAG_OR_MEMO' - Invalid Tag or Memo

        - 'ZERO_BALANCE_IN_PERMANENT_ADDRESS' - Not enough BTC on legacy permanent address

        - 'NEED_MORE_TO_CREATE_DESTINATION' - Insufficient funds for creating destination account

        - 'NON_EXISTING_ACCOUNT_NAME' - Account does not exist

        - 'ENV_UNSUPPORTED_ASSET' - Asset is not supported under this workspace settings

        - 'DEST_TYPE_NOT_SUPPORTED' - Withdrawal from this third party account to this destination is not supported. This sub-status appears for withdrawals from a Paxos exchange account to a one-time address
    Term:
      type: object
      properties:
        networkConnectionId:
          type: string
        outgoing:
          type: boolean
        asset:
          type: string
        amount:
          type: string
        note:
          type: string
        operation:
          type: string
    SetConfirmationsThresholdRequest:
      type: object
      properties:
        numOfConfirmations:
          type: number
    SetConfirmationsThresholdResponse:
      type: object
      properties:
        success:
          type: boolean
        transactions:
          type: array
          items:
            type: string
    DropTransactionRequest:
      type: object
      properties:
        txId:
          type: string
        feeLevel:
          type: string
        gasPrice:
          type: string
    DropTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
        transactions:
          type: array
          items:
            type: string
    UnsignedMessage:
      type: object
      properties:
        content:
          type: string
        bip44addressIndex:
          type: integer
        bip44change:
          type: number
        derivationPath:
          type: array
          items:
            type: number
      required:
        - content
    SignedMessage:
      type: object
      properties:
        content:
          type: string
        algorithm:
          type: string
          enum:
            - MPC_ECDSA_SECP256K1
            - MPC_ECDSA_SECP256R1
            - MPC_EDDSA_ED25519
        derivationPath:
          type: array
          items:
            type: number
        signature:
          type: object
          properties:
            fullSig:
              type: string
            r:
              type: string
            s:
              type: string
            v:
              type: number
        publicKey:
          type: string
    PublicKeyInformation:
      type: object
      properties:
        algorithm:
          type: string
        derivationPath:
          type: array
          items:
            type: number
        publicKey:
          type: string
    TradingAccountType:
      type: string
      enum:
        - COIN_FUTURES
        - COIN_MARGINED_SWAP
        - EXCHANGE
        - FUNDING
        - FUNDABLE
        - FUTURES
        - FUTURES_CROSS
        - MARGIN
        - MARGIN_CROSS
        - OPTIONS
        - SPOT
        - USDT_MARGINED_SWAP_CROSS
        - USDT_FUTURES
        - UNIFIED
    ValidateAddressResponse:
      type: object
      properties:
        isValid:
          type: boolean
        isActive:
          type: boolean
        requiresTag:
          type: boolean
    ResendWebhooksResponse:
      type: object
      properties:
        messagesCount:
          type: number
    UnspentInputsResponse:
      type: object
      properties:
        input:
          $ref: '#/components/schemas/UnspentInput'
        address:
          type: string
        amount:
          type: string
        confirmations:
          type: number
        status:
          type: string
    UnspentInput:
      type: object
      properties:
        txHash:
          type: string
        index:
          type: number
    GetUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'

    NetworkIdRoutingPolicy:
      type: object
      properties:
        crypto:
          oneOf:
           - $ref: '#/components/schemas/CustomCryptoRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        sen:
          oneOf:
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        signet:
          oneOf:
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        sen_test:
          oneOf:
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
        signet_test:
          oneOf:
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
    NetworkConnectionRoutingPolicy:
      type: object
      properties:
        crypto:
          oneOf:
           - $ref: '#/components/schemas/CustomCryptoRoutingDest'
           - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        sen:
          oneOf:
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
           - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        signet:
          oneOf:
           - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
        sen_test:
          oneOf:
           - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
        signet_test:
          oneOf:
           - $ref: '#/components/schemas/NoneNetworkRoutingDest'
           - $ref: '#/components/schemas/CustomFiatRoutingDest'
           - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
    CustomFiatRoutingDest:
      type: object
      properties:
        scheme:
          description: The network routing logic.
          type: string
          enum:
            - CUSTOM
        dstType:
          type: string
          description: The fiat account the funds are being sent to.
          enum:
            - FIAT_ACCOUNT
        dstId:
          type: string
          description: The ID of the fiat account the funds are being sent to.
      required:
        - scheme
        - dstType
        - dstId
    CustomCryptoRoutingDest:
      type: object
      properties:
        scheme:
          type: string
          description: The network routing logic.
          enum:
            - CUSTOM
        dstType:
          type: string
          description: The type of destination account the funds are being sent to.
          enum:
            - VAULT
            - EXCHANGE
        dstId:
          type: string
          description: The ID of the destination account the funds are being sent to.
      required:
        - scheme
        - dstType
        - dstId
    DefaultNetworkRoutingDest:
      type: object
      properties:
        scheme:
          type: string
          description: The network routing logic.
          enum:
            - DEFAULT
      required:
        - scheme
    NoneNetworkRoutingDest:
      type: object
      properties:
        scheme:
          type: string
          description: No network routing logic.
          enum:
            - NONE
      required:
        - scheme
    UserResponse:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        email:
          type: string
        enabled:
          type: boolean
    SessionMetadata:
      type: object
      properties:
        appUrl:
          type: string
        appName:
          type: string
        appDescription:
          type: string
        appIcon:
          type: string
      required:
        - appUrl
    SessionDTO:
      type: object
      properties:
        id:
          type: string
          description: Id of the connection
          example: 4e9e7051-f3b2-48e9-8ee6-b12492552657
        userId:
          type: string
          description: Id of the user that created the connection
        sessionMetadata:
          description: Metadata of the connection (provided by the dapp)
          allOf:
            - $ref: '#/components/schemas/SessionMetadata'
        vaultAccountId:
          type: number
          description: The vault to connect
          example: 1
        feeLevel:
          type: string
          description: The default fee level
          example: MEDIUM
          enum:
            - MEDIUM
            - HIGH
        chainIds:
          description: The chains approved for the connection
          example: '[ETH, ETH_TEST, SOL]'
          type: array
          items:
            type: string
        connectionType:
          type: string
          description: The connection's type
          example: WalletConnect
          enum:
            - WalletConnect
        connectionMethod:
          type: string
          description: The method through which the connection was established
          example: API
          enum:
            - DESKTOP
            - MOBILE
            - API
        creationDate:
          format: date-time
          type: string
          description: Timestamp of the session's creation
      required:
        - id
        - userId
        - sessionMetadata
        - vaultAccountId
        - feeLevel
        - chainIds
        - connectionType
        - connectionMethod
        - creationDate
    Paging:
      type: object
      properties:
        next:
          type: string
          description: Cursor to the next page
      required:
        - next
    GetConnectionsResponse:
      type: object
      properties:
        data:
          description: Array with the requested Web3 connection's data
          type: array
          items:
            $ref: '#/components/schemas/SessionDTO'
        paging:
          $ref: '#/components/schemas/Paging'
      required:
        - data
    CreateConnectionRequest:
      type: object
      properties:
        vaultAccountId:
          type: number
          description: The ID of the vault to connect to the Web3 connection.
          example: 1
        feeLevel:
          type: string
          description: The default fee level. Valid values are `MEDIUM` and `HIGH`.
          example: MEDIUM
          enum:
            - MEDIUM
            - HIGH
        uri:
          type: string
          description: The WalletConnect uri provided by the dapp.
          example: >-
            wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637
        chainIds:
          description: The ID of the blockchain network used in the Web3 connection.
          example:
            - ETH
            - ETH_TEST
          type: array
          items:
            type: string
      required:
        - vaultAccountId
        - feeLevel
        - uri
        - chainIds
    CreateConnectionResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the Web3 connection initiated.
          example: 4e9e7051-f3b2-48e9-8ee6-b12492552657
        sessionMetadata:
          description: Metadata of the Web3 connection (provided by the DApp).
          allOf:
            - $ref: '#/components/schemas/SessionMetadata'
      required:
        - id
        - sessionMetadata
    RespondToConnectionRequest:
      type: object
      properties:
        approve:
          type: boolean
          description: Approval of the initiated Web3 connection.
          example: true
      required:
        - approve
    AddCollateralRequestBody: 
      type: object
      properties:
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
        isSrcCollateral:
          type: boolean
          description: optional
    RemoveCollateralRequestBody:
      type: object
      properties:
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
        isDstCollateral:
          type: boolean
          description: optional
    SettlementRequestBody:
      type: object
      properties:
        mainExchangeAccountId:
          type: string
    SettlementResponse: 
      type: object
      properties:
        id: 
          type: string
        initiator:
          type: string
        exchangeReply:
          type: string
        fireblocksInitiatedTransactions: 
          type: object
        exchangeRequestedTransactions:
          $ref: '#/components/schemas/ExchangeSettlementTransactionsResponse'
    GetSettlementResponse:
      $ref: '#/components/schemas/ExchangeSettlementTransactionsResponse'
    ExchangeSettlementTransactionsResponse: 
      type: object
      properties: 
        toExchange:
          type: array
          items:
            $ref: '#/components/schemas/ToExchangeTransaction'
        toCollateral: 
            type: array
            items:
              $ref: '#/components/schemas/ToCollateralTransaction'
    ToExchangeTransaction: 
      type: object
      properties:
        assetId:
          type: string
        amount:
          type: string
        dstAddress:
          type: string
        dstTag:
          type: string
          description: optional
    ToCollateralTransaction: 
      type: object
      properties:
        asset:
          type: string
        amount:
          type: string
        srcAddress:
          type: string
        srcTag: 
          type: string
          description: optional
        fee: 
          type: string
          description: optional
    XBSettlementConfigCreationRequestBody:
      type: object
      properties:
        name:
          type: string
        corridorId:
          type: string
        steps:
          $ref: '#/components/schemas/XBSettlementConfigStepsRecord'

      required:
        - name
        - corridorId
        - steps
    XBSettlementConfigCreationResponse:
      $ref: '#/components/schemas/XBSettlementConfigModel'
    XBSettlementConfigEditRequestBody:
      type: object
      properties:
        name:
          type: string
        steps:
          $ref: '#/components/schemas/XBSettlementConfigStepsRecord'
    XBSettlementConfigEditResponse:
      $ref: '#/components/schemas/XBSettlementConfigModel'
    XBSettlementConfigDeletionResponse:
      type: object
      properties:
        configId:
          type: string
          format: uuid
      required:
        - configId
    GetXBSettlementConfigResponse:
      $ref: '#/components/schemas/XBSettlementConfigModel'
    GetAllXBSettlementConfigsResponse:
      type: object
      properties:
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/XBSettlementConfigModel'
      required:
        - configurations
    XBCreateSettlementFlowRequestBody:
      type: object
      properties:
        configId:
          type: string
          format: uuid
        amount:
          $ref: '#/components/schemas/XBSettlementAsset'
      required:
        - configId
        - amount
    XBCreateSettlementFlowResponse:
      $ref: '#/components/schemas/XBSettlementFlowSetupModel'
    XBSettlementFlowExecutionResponse:
      $ref: '#/components/schemas/XBSettlementFlowExecutionModel'
    XBSettlementFlowExecutionStep:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        status:
          $ref: '#/components/schemas/XBSettlementFlowExecutionStepStatus'
        inputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        outputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        fee:
          $ref: '#/components/schemas/XBSettlementAsset'
        startedAt:
          type: number
      required:
        - id
        - accountId
        - status
        - inputAmount
        - outputAmount
        - fee
        - startedAt
    XBSettlementFlowExecutionStepStatus:
      type: string
      enum:
        - NOT_STARTED
        - PROCESSING
        - COMPLETED
        - FAILED
    XBSettlementFlowExecutionStatus:
      type: string
      enum:
        - NOT_LAUNCHED
        - PROCESSING
        - COMPLETED
        - FAILED
    XBSettlementConfigModel:
      type: object
      properties:
        tenantId:
          type: string
        configId:
          type: string
          format: uuid
        corridorId:
          type: string
        name:
          type: string
        steps:
          $ref: '#/components/schemas/XBSettlementConfigStepsRecord'
      required:
        - tenantId
        - configId
        - name
        - corridorId
        - steps
    XBSettlementConfigStep:
      type: object
      properties:
        stepType:
          $ref: '#/components/schemas/XBSettlementStepType'
        accountId:
          type: string
      required:
        - stepType
        - accountId
    XBSettlementStepType:
      type: string
      enum:
        - ON_RAMP
        - VAULT_ACCOUNT
        - OFF_RAMP
        - FIAT_DESTINATION
    XBSettlementFlowSetupStep:
      type: object
      properties:
        accountId:
          type: string
        inputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        outputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        estimatedFeeAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        estimatedTime:
          type: number
      required:
        - accountId
        - inputAmount
        - outputAmount
        - estimatedFeeAmount
        - estimatedTime
    XBSettlementFlowSetupModel:
      type: object
      properties:
        tenantId:
          type: string
        flowId:
          type: string
        configId:
          type: string
        steps:
          $ref: '#/components/schemas/XBSettlementFlowStepsRecord'
        inputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        outputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        totalEstimatedFees:
          $ref: '#/components/schemas/XBSettlementAsset'
        totalEstimatedTime:
          type: number
      required:
        - tenantId
        - configId
        - steps
        - inputAmount
        - outputAmount
        - totalEstimatedFees
        - totalEstimatedTime
    XBSettlementFlowExecutionModel:
      type: object
      properties:
        tenantId:
          type: string
        flowId:
          type: string
        configId:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/XBSettlementFlowExecutionStep'
        inputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        outputAmount:
          $ref: '#/components/schemas/XBSettlementAsset'
        totalFees:
          $ref: '#/components/schemas/XBSettlementAsset'
        initiatedAt:
          type: number
        initiatedBy:
          description: 'id of the user which launched the flow'
          type: string
        state:
          $ref: '#/components/schemas/XBSettlementFlowExecutionStatus'
      required:
        - tenantId
        - flowId
        - configId
        - steps
        - inputAmount
        - outputAmount
        - totalFees
        - initiatedAt
        - initiatedBy
        - state
    XBSettlementConfigStepsRecord:
      type: object
      properties:
        stepType:
          $ref: '#/components/schemas/XBSettlementStepType'
      additionalProperties:
        type: object
        properties:
          accountId:
            type: string
        required:
          - accountId
    XBSettlementFlowStepsRecord:
      type: object
      properties:
        stepType:
          $ref: '#/components/schemas/XBSettlementStepType'
      additionalProperties:
        $ref: '#/components/schemas/XBSettlementFlowSetupStep'
    XBSettlementAsset:
      type: object
      properties:
        amount:
          type: string
        assetId:
          type: string
      required:
        - amount
        - assetId
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - INTERNAL
                - AUTHENTICATION
                - AUTHORIZATION
                - VALIDATION
                - NOT_FOUND
                - UNPROCESSABLE_ENTITY
                - FORBIDDEN
            message:
              type: string
          required:
            - type
            - message
      required:
        - error